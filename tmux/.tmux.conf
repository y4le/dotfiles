# Use ZSH
set -g default-shell "$SHELL"

# Set prefix to Ctrl-Space
source-file ~/.config/tmux/prefix_space.tmux.conf

# Enable resize mode with prefix-r
source-file ~/.config/tmux/resize_mode_off.tmux.conf

# Use vi keys
set -gw mode-keys vi
set -gw status-keys vi

# immediately pass escape key through
set -s escape-time 0

# Mouse support
set -g mouse on

# 256 color support
set -g default-terminal "screen-256color"

# Show activity in background windows
setw -g monitor-activity on

# Start window numbers from 1
set -g base-index 1

# pass through ctrl+arrow
setw -g xterm-keys on

# auto resize windows
setw -g aggressive-resize on

# set up window and pane naming
set -g set-titles on
set -g set-titles-string '#{window_name} [#{session_name}](#{pane_title})'
set -g pane-border-format '#{pane_index} #T `#{pane_current_command}`'

# pane titles / rename
bind t run 'zsh -c "arr=( off top ) && tmux setw pane-border-status \${arr[\$(( \${arr[(I)#{pane-border-status}]} % 2 + 1 ))]}"'
bind T command-prompt -p "(rename-pane)" -I "#T" "select-pane -T '%%'"

# New windows/panes keep the same directory as current window
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# better vi-like copy mode, sends to system clipboard if `cpy` script is present
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace cpy'
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi V send-keys -X rectangle-toggle
set -g word-separators " -_@/:,=()[]<>."

# source local config before we source plugins so we can add @plugins
if "test -f ~/.tmux.local.conf" "source ~/.tmux.local.conf"

# allow for C-h/j/k/l to navigate between vim and tmux panes
source-file ~/.config/tmux/vim_tmux_navigator.tmux.conf
source-file ~/.config/tmux/status_bar.tmux.conf
source-file ~/.config/tmux/plugins.tmux.conf

bind R source-file ~/.tmux.conf \; display-message "Configuration reloaded."
